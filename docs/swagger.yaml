definitions:
  model.BidHistory:
    properties:
      bidamount:
        type: integer
      biddate:
        type: string
      images:
        items:
          type: string
        type: array
      itemid:
        type: integer
      itemname:
        type: string
      sessionenddate:
        type: string
      sessionid:
        type: integer
      sessionstartdate:
        type: string
    type: object
  model.BidSessionLog:
    properties:
      amount:
        type: integer
      createAt:
        type: string
      sessionid:
        type: integer
      userid:
        type: string
    type: object
  model.Categories:
    properties:
      categoriesid:
        type: integer
      categoriesname:
        type: string
    type: object
  model.Deletelastlog:
    properties:
      sessionid:
        type: integer
      userid:
        type: string
    required:
    - sessionid
    - userid
    type: object
  model.Items:
    properties:
      categoriesid:
        type: integer
      createAt:
        type: string
      itemcondition:
        type: string
      itemdescription:
        type: string
      itemid:
        type: integer
      itemname:
        type: string
    type: object
  model.LoginForm:
    properties:
      password:
        type: string
      userid:
        type: string
    required:
    - password
    - userid
    type: object
  model.ModifyPassword:
    properties:
      newpassword:
        type: string
      oldpassword:
        type: string
    required:
    - newpassword
    - oldpassword
    type: object
  model.NewBidLog:
    properties:
      amount:
        type: integer
      sessionid:
        type: integer
    required:
    - amount
    - sessionid
    type: object
  model.NewReview:
    properties:
      reviewcontent:
        type: string
      reviewscore:
        type: integer
      sessionid:
        type: integer
      usertargetid:
        type: string
    required:
    - reviewcontent
    - reviewscore
    - sessionid
    - usertargetid
    type: object
  model.NewSession:
    properties:
      categoriesid:
        type: integer
      enddate:
        type: string
      imagelink:
        items:
          type: string
        type: array
      itemcondition:
        type: string
      itemdescription:
        type: string
      itemname:
        type: string
      minimumincreasebid:
        type: integer
      startdate:
        type: string
      startprice:
        type: integer
    required:
    - categoriesid
    - itemcondition
    - itemdescription
    - itemname
    - minimumincreasebid
    - startprice
    type: object
  model.RegisterForm:
    properties:
      email:
        type: string
      password:
        type: string
      userid:
        type: string
    required:
    - email
    - password
    - userid
    type: object
  model.SellHistory:
    properties:
      images:
        items:
          type: string
        type: array
      itemid:
        type: integer
      itemname:
        type: string
      sessionenddate:
        type: string
      sessionid:
        type: integer
      sessionstartdate:
        type: string
    type: object
  model.SessionSearch:
    properties:
      biddingLog:
        items:
          $ref: '#/definitions/model.BidSessionLog'
        type: array
      categoriesid:
        type: integer
      categoriesname:
        type: string
      currentbid:
        type: integer
      enddate:
        type: string
      imagelink:
        items:
          type: string
        type: array
      itemcondition:
        type: string
      itemdescription:
        type: string
      itemid:
        type: integer
      itemname:
        type: string
      minimumincreasebid:
        type: integer
      sellerid:
        type: string
      sellername:
        type: string
      sessionid:
        type: integer
      sessionstatus:
        type: string
      startdate:
        type: string
      viewcount:
        type: integer
    required:
    - categoriesid
    - currentbid
    - itemcondition
    - itemdescription
    - itemname
    - minimumincreasebid
    type: object
  model.UpdateSession:
    properties:
      itemcondition:
        type: string
      itemdescription:
        type: string
      itemname:
        type: string
      sessionid:
        type: integer
    required:
    - sessionid
    type: object
  model.UserCommon:
    properties:
      accesslevel:
        type: integer
      address:
        type: string
      avatarimage:
        type: string
      createAt:
        type: string
      email:
        type: string
      gender:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      userid:
        type: string
    type: object
  model.UserReview:
    properties:
      content:
        type: string
      score:
        type: integer
      sessionid:
        type: integer
      targetid:
        type: string
      writerid:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /awaitpayment:
    get:
      description: Hiển thị phiên đấu giá chưa thanh toán của người dùng. Cần phải
        đăng nhập để sử dụng. Trả về JSON form
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Hiển thị phiên đấu giá chưa thanh toán
      tags:
      - BidSession Controller
  /categories:
    get:
      description: Tìm categories bằng id, nhận id dưới dạng query, trả về toàn bộ
        tên categories nếu để trống.
      parameters:
      - description: id of categories, if empty then return all
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Categories'
        "500":
          description: Error message
          schema:
            type: body
      summary: Tìm categories bằng id
      tags:
      - Categories Controller
    post:
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Tạo Categories mới (Administrator only)
      tags:
      - Categories Controller
  /history/bid:
    get:
      description: Hiển thị những hoạt động đấu giá của user trên các session.
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BidHistory'
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Hiển thị lịch sử đấu giá của user.
      tags:
      - BidSession Controller
  /history/sell:
    get:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SellHistory'
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Hiển thị lịch sử bán hàng của user
      tags:
      - BidSession Controller
  /lock/:sessionid:
    put:
      parameters:
      - description: session ID
        in: path
        name: SessionID
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Khóa phiên đấu giá (API nội bộ, không public cho user)
      tags:
      - BidSession Controller
  /login:
    post:
      description: Đăng nhập bằng JSON form, trả về session token nếu thành công.
      parameters:
      - description: Login Information
        in: body
        name: LoginForm
        required: true
        schema:
          $ref: '#/definitions/model.LoginForm'
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Session token
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Đăng nhập bằng JSON
      tags:
      - Logging Controller
  /logs:
    post:
      description: Nhận thông tin đấu giá dưới dạng JSON, sau đó kiểm tra quyền đấu
        giá của user (người dùng không thể ra giá chính phiên của mình). Trả về message
        JSON thông báo
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Information to be provided
        in: body
        name: NewBidInfo
        required: true
        schema:
          $ref: '#/definitions/model.NewBidLog'
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Ra giá trong một Session
      tags:
      - Bidding Log Controller
  /logs/:sessionid:
    get:
      description: Nhận thông tin session_id dưới dạng Path, sau đó trả về toàn bộ
        lịch sử đấu giá của id đó.
      parameters:
      - description: Session id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BidSessionLog'
        "500":
          description: Error message
          schema:
            type: body
      summary: Lấy lịch sử đấu giá của một Session
      tags:
      - Bidding Log Controller
  /logs/last:
    delete:
      description: Xóa lần ra giá gần nhất của phiên đấu giá.
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Bid Log info
        in: body
        name: LogInfo
        required: true
        schema:
          $ref: '#/definitions/model.Deletelastlog'
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Xóa lần ra giá gần nhất (Administrator only)
      tags:
      - Bidding Log Controller
  /password:
    put:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Information to be provided
        in: body
        name: Passwordinfo
        required: true
        schema:
          $ref: '#/definitions/model.ModifyPassword'
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Đổi mất khẩu người dùng
      tags:
      - User Controller
  /profile:
    get:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserCommon'
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Hiển thị thông tin cá nhân người dùng
      tags:
      - User Controller
    put:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Thay đổi thông tin cá nhân người dùng
      tags:
      - User Controller
  /review:
    post:
      description: Tạo review từ user đến user khác. Review phải được đính với id
        session đấu già mà user đó thắng. Mỗi id session chỉ có duy nhất 1 review.
        Một user không thể review chính bản thân mình.
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Information to be provided
        in: body
        name: NewSessionInfo
        required: true
        schema:
          $ref: '#/definitions/model.NewReview'
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Tạo review mới
      tags:
      - Review Controller
  /review/:sessionid:
    delete:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID session
        in: path
        name: sessionID
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Xóa review của user dựa theo session id (administrator only)
      tags:
      - Review Controller
  /review/:userid:
    get:
      description: Lấy review bằng userid dưới dạng path, trả về form JSON.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserReview'
        "500":
          description: Error message
          schema:
            type: body
      summary: Lấy review bằng userid
      tags:
      - Review Controller
  /session:
    get:
      description: Tìm phiên đấu giá bằng tên mặt hàng và/hoặc categories. Tên mặt
        hàng không cần viết đầy đủ. Trả về tất cả nếu để trống. Trả về JSON form
      parameters:
      - description: Name of the item (or part of it)
        in: query
        name: name
        required: true
        type: string
      - description: Item Categories by number
        in: query
        name: categories
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SessionSearch'
        "500":
          description: Error message
          schema:
            type: body
      summary: Tìm phiên đấu giá bằng tên mặt hàng và/hoặc categories
      tags:
      - BidSession Controller
    post:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Information to be provided
        in: body
        name: NewSessionInfo
        required: true
        schema:
          $ref: '#/definitions/model.NewSession'
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Tạo phiên đấu giá mới
      tags:
      - BidSession Controller
    put:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Information to be provided
        in: body
        name: NewSessionInfo
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSession'
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Thay đổi thông tin phiên đấu giá.
      tags:
      - BidSession Controller
  /session/:sessionid:
    delete:
      description: Xóa toàn bộ phiên đấu giá và các dữ liệu liên quan như lịch sử
        đấu giá, thông tin mặt hàng của phiên đấu giá.
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: session id to be deleted
        in: path
        name: sessionid
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Xóa phiên đấu giá (Administrator only)
      tags:
      - BidSession Controller
    get:
      description: Tìm phiên đáu giá bằng id dưới dạng path, trả về JSON form
      parameters:
      - description: Session id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SessionSearch'
        "500":
          description: Error message
          schema:
            type: body
      summary: Tìm phiên đấu giá bằng id
      tags:
      - BidSession Controller
  /signup:
    post:
      description: Tạo tài khoản mới bằng JSON form, trả về session token nếu thành
        công.
      parameters:
      - description: Resgister Information
        in: body
        name: RegisterInfo
        required: true
        schema:
          $ref: '#/definitions/model.RegisterForm'
      responses:
        "200":
          description: Session token
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Tạo tài khoản mới
      tags:
      - Logging Controller
  /upload:
    post:
      description: Upload one or multiples photos of item , return a JSON message
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Item id to be removed from wishlist
        in: path
        name: itemid
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
  /wishlist:
    get:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Items'
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Hiển thị danh sách đánh dấu session của user
      tags:
      - Wishlist Controller
  /wishlist/:itemid:
    delete:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Item id to be removed from wishlist
        in: path
        name: itemid
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Xóa session khỏi danh sách đánh dấu
      tags:
      - Wishlist Controller
    post:
      parameters:
      - description: Session token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Item id to be added to wishlist
        in: path
        name: itemid
        required: true
        type: string
      responses:
        "200":
          description: Success message
          schema:
            type: body
        "400":
          description: Error message
          schema:
            type: body
        "401":
          description: Error message
          schema:
            type: body
        "500":
          description: Error message
          schema:
            type: body
      summary: Thêm session vào danh sách đánh dấu của user
      tags:
      - Wishlist Controller
swagger: "2.0"
