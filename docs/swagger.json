{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/categories": {
            "get": {
                "description": "Search categories by id, return all by default, return a JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of categories, if empty then return all",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Categories"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login by JSON form, return a jwt session token in JSON form",
                "parameters": [
                    {
                        "description": "username",
                        "name": "userid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session token",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/logs/:id": {
            "get": {
                "description": "Get Bid Session Logs by session ID, return a JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BidSessionLog"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/password": {
            "put": {
                "description": "Add new item to wishlist, return a JSON message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Old Password",
                        "name": "oldpassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "New Password",
                        "name": "newpassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Show user profile, return user general profile in JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserCommon"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify/Update user profile, return message in JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/review/:id": {
            "get": {
                "description": "Show review of User by User ID, return a JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserReview"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/session": {
            "get": {
                "description": "Search Session by query, return a JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the item (or part of it)",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item Categories by number",
                        "name": "categories",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SessionSearch"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/session/:id": {
            "get": {
                "description": "Show Session information by ID, return a JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SessionSearch"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register new Account in JSON form, return a jwt session token in JSON form",
                "parameters": [
                    {
                        "description": "username",
                        "name": "userid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session token",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Upload one or multiples photos of item , return a JSON message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item id to be removed from wishlist",
                        "name": "itemid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/wishlist": {
            "get": {
                "description": "Show user WishList, return a JSON form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Items"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/wishlist/:id": {
            "post": {
                "description": "Add new item to wishlist, return a JSON message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item id to be added to wishlist",
                        "name": "itemid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove item from wishlist, return a JSON message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item id to be removed from wishlist",
                        "name": "itemid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BidSessionLog": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createAt": {
                    "type": "string"
                },
                "sessionid": {
                    "type": "integer"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.Categories": {
            "type": "object",
            "properties": {
                "categoriesName": {
                    "type": "string"
                },
                "categoriesid": {
                    "type": "integer"
                }
            }
        },
        "model.Items": {
            "type": "object",
            "properties": {
                "categoriesid": {
                    "type": "integer"
                },
                "createAt": {
                    "type": "string"
                },
                "imagelink": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "itemName": {
                    "type": "string"
                },
                "itemcondition": {
                    "type": "string"
                },
                "itemdescription": {
                    "type": "string"
                },
                "itemid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.SessionSearch": {
            "type": "object",
            "properties": {
                "biddingLog": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BidSessionLog"
                    }
                },
                "categoriesName": {
                    "type": "string"
                },
                "categoriesid": {
                    "type": "integer"
                },
                "currentbid": {
                    "type": "integer"
                },
                "enddate": {
                    "type": "string"
                },
                "imagelink": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "itemName": {
                    "type": "string"
                },
                "itemdescription": {
                    "type": "string"
                },
                "itemid": {
                    "type": "integer"
                },
                "minimumIncreaseBid": {
                    "type": "integer"
                },
                "sellerid": {
                    "type": "string"
                },
                "sellername": {
                    "type": "string"
                },
                "sessionid": {
                    "type": "integer"
                },
                "startdate": {
                    "type": "string"
                }
            }
        },
        "model.UserCommon": {
            "type": "object",
            "properties": {
                "accesslevel": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "avatarimage": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.UserReview": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "sessionid": {
                    "type": "integer"
                },
                "targetid": {
                    "type": "string"
                },
                "writerid": {
                    "type": "string"
                }
            }
        }
    }
}